import os
import logging
import requests
import asyncio
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher
from aiogram.types import Message, Update
from aiogram.filters import Command
from dotenv import load_dotenv
from weather_api import get_weather, get_forecast
from database import get_pool, save_request
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI()

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π connection pool
pool = None

# üëá –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥
@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /weather <–≥–æ—Ä–æ–¥>, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É.\n–ü—Ä–∏–º–µ—Ä: `/weather –ú–æ—Å–∫–≤–∞`")

@dp.message(Command("weather"))
async def weather_command(message: Message):
    global pool
    if not pool:
        pool = await get_pool()

    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `/weather –ú–æ—Å–∫–≤–∞`")
        return

    city = args[1]
    weather_info = await get_weather(city)
    await message.answer(weather_info)
    await save_request(pool, message.from_user.username, city, datetime.now())

@dp.message(Command("forecast"))
async def forecast_command(message: Message):
    global pool
    if not pool:
        pool = await get_pool()

    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `/forecast –ú–æ—Å–∫–≤–∞`")
        return

    city = args[1]
    forecast_info = await get_forecast(city)
    await message.answer(forecast_info)
    await save_request(pool, message.from_user.username, city, datetime.now())

# üëá –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (webhook)
@app.post("/webhook")
async def telegram_webhook(request: Request):
    body = await request.json()
    update = Update.model_validate(body)
    await dp.feed_update(bot, update)
    return {"ok": True}

# üëá –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è connection pool –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ FastAPI
@app.on_event("startup")
async def on_startup():
    global pool
    pool = await get_pool()
    print("üöÄ API –∑–∞–ø—É—â–µ–Ω, pool —Å–æ–∑–¥–∞–Ω")
